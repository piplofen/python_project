import telebot
from telebot import types
import cfg
import time

bot = telebot.TeleBot(cfg.token)

@bot.message_handler(commands=["start"])
def start(message):
    global keyboard
    if str(message.chat.id) == str(cfg.group):
        bot.send_message(message.chat.id, f"–î–ª—è —Ç–µ–±—è ({message.from_user.first_name}) —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç üòù")
    elif str(message.chat.id) != str(cfg.group):
        keyboard = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
        keyboard_info = types.KeyboardButton(text="–£–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é üìä")
        keyboard_add = types.KeyboardButton(text="–°–æ–∑–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ üìù")

        keyboard.add(keyboard_info)
        keyboard.add(keyboard_add)

        bot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}!\n–Ø –±–æ—Ç—è—Ä–∞ –Ω—É–ª—ë–≤–∞—è", reply_markup=keyboard)

@bot.message_handler(content_types="text")
def message_reply(message):
    if message.text == "–£–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é üìä":
        if bot.get_chat_members_count(cfg.group) % 10 == 1:
            bot.send_message(message.chat.id, f"========={bot.get_chat(cfg.group).title}=========\n"
                                              f"–í –≥—Ä—É–ø–ø–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è {bot.get_chat_members_count(cfg.group)} —á–µ–ª–æ–≤–µ–∫\n", reply_markup=keyboard)
        else:
            bot.send_message(message.chat.id, f"========={bot.get_chat(cfg.group).title}=========\n"
                                              f"–í –≥—Ä—É–ø–ø–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è {bot.get_chat_members_count(cfg.group)} —á–µ–ª–æ–≤–µ–∫–∞\n"
                                              f"{bot.get_chat(cfg.group)}", reply_markup=keyboard)

    elif message.text == "–°–æ–∑–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ üìù":
        bot.send_message(message.chat.id, "–°–æ–∑–¥–∞–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏–µ, –ø–æ–¥–æ–∂–¥–∏—Ç–µ —Å–µ–∫—É–Ω–¥—É", reply_markup=keyboard)
        time.sleep(1)
        textAnnouncement = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏—è")
        bot.register_next_step_handler(textAnnouncement, add_textAnnouncement)

    elif message.text == "–î–∞":
        bot.send_message(message.chat.id, "—Ö—ã—Ö", reply_markup=keyboard)

    elif message.text == "–ù–µ—Ç":
        bot.send_message(message.chat.id, "–´–´–´–´", reply_markup=keyboard)

def add_textAnnouncement(message):
    text = message.text
    bot.send_message(message.chat.id, f"–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: ‚¨á\n{text}", reply_markup=keyboard)
    keyboardStep2 = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
    keyboardStep2_Accept = types.KeyboardButton(text="–î–∞")
    keyboardStep2_NotAccept = types.KeyboardButton(text="–ù–µ—Ç")

    keyboardStep2.add(keyboardStep2_Accept, keyboardStep2_NotAccept)

    bot.send_message(message.chat.id, "–í—ã–∫–ª–∞–¥—ã–≤–∞–µ–º —ç—Ç–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ?", reply_markup=keyboardStep2)

# @bot.message_handler(content_types="text")
# def message_reply(message):
#     if message.text == "–î–∞":
#         bot.send_message(message.chat.id, f"–©—è –≤—ã–ª–æ–∂—É")
#
#     elif message.text == "–ù–µ—Ç":
#         bot.send_message(message.chat.id, "–ü–æ–Ω—è–ª")


bot.polling(none_stop = True, interval = 0)